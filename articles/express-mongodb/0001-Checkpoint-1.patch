From 4248ac7d1b6d3a8b500aadbc0ed73f92a67d55fa Mon Sep 17 00:00:00 2001
From: ciaranj <ciaranj@gmail.com>
Date: Thu, 18 Feb 2010 20:59:58 +0000
Subject: [PATCH] Checkpoint 1 !

---
 app.js                      |   51 +++++++++++++++++++++++++++++++++++++++++++
 articleprovider-memory.js   |   51 +++++++++++++++++++++++++++++++++++++++++++
 views/blog_new.haml.html    |   11 +++++++++
 views/blogs_index.haml.html |    7 ++++++
 views/layout.haml.html      |    6 +++++
 views/style.sass.css        |   28 +++++++++++++++++++++++
 6 files changed, 154 insertions(+), 0 deletions(-)
 create mode 100644 app.js
 create mode 100644 articleprovider-memory.js
 create mode 100644 views/blog_new.haml.html
 create mode 100644 views/blogs_index.haml.html
 create mode 100644 views/layout.haml.html
 create mode 100644 views/style.sass.css

diff --git a/app.js b/app.js
new file mode 100644
index 0000000..d8f0fdf
--- /dev/null
+++ b/app.js
@@ -0,0 +1,51 @@
+require.paths.unshift('lib')
+require('express')
+require('express/plugins')
+var ArticleProvider= require('./articleprovider-memory').ArticleProvider;
+
+configure(function(){
+  use(MethodOverride)
+  use(ContentLength)
+  use(CommonLogger)
+  set('root', __dirname)
+})                                             
+
+function getArticleProvider() {
+    return new ArticleProvider();
+}
+            
+get('/', function(){
+    var self= this;
+     getArticleProvider().findAll().addCallback(function(docs) {      
+        self.render('blogs_index.haml.html', {
+          locals: {
+            title: 'Blog',
+            articles: docs
+          }
+        })    
+    });
+})
+
+get('/blog/new', function(){          
+    this.render('blog_new.haml.html', {
+      locals: {
+        title: 'New Post'
+      }
+    })    
+}) 
+
+post('/blog/new', function(){ 
+    var self= this;
+    getArticleProvider().save({
+        title: this.param('title'), 
+        body: this.param('body')
+    }).addCallback(function(docs) {         
+        self.redirect('/')
+    });    
+})
+
+get('/*.css', function(file){
+  this.render(file + '.sass.css', { layout: false })
+})
+
+run()
\ No newline at end of file
diff --git a/articleprovider-memory.js b/articleprovider-memory.js
new file mode 100644
index 0000000..b7252c3
--- /dev/null
+++ b/articleprovider-memory.js
@@ -0,0 +1,51 @@
+ArticleProvider = function() {}        
+
+var articleCounter= 1;
+
+ArticleProvider.prototype.dummyData= []; 
+
+ArticleProvider.prototype.findAll = function() {
+    var promise= new process.Promise();
+    promise.emitSuccess( this.dummyData );
+    return promise;
+};
+
+ArticleProvider.prototype.findById = function(id) {
+    var promise= new process.Promise(),
+        result= null;
+    for(var i=0;i<this.dummyData.length;i++) {
+        if( this.dummyData[i]._id == id ) {
+            result= this.dummyData[i];
+            break;
+        }
+    }
+    promise.emitSuccess( result );
+    return promise;
+};    
+
+ArticleProvider.prototype.save = function(articles) {
+    var promise= new process.Promise(),
+        article= null;   
+
+    if( typeof(articles.length)=="undefined") articles= [articles];
+    
+    for( var i=0;i< articles.length;i++ ) {
+        article= articles[i];
+        article._id= articleCounter++;
+        article.created_at= new Date(); 
+        if( article.comments === undefined ) article.comments= [];
+        for(var j=0;j< article.comments.length; j++) {
+            article.comments[j].created_at= new Date();
+        }
+        this.dummyData[this.dummyData.length]= article;
+    }                                      
+    promise.emitSuccess();
+    return promise;
+};  
+
+/* Lets bootstrap with dummy data */
+new ArticleProvider().save([{title: 'Post one', body: 'Body one', comments:[{author:'Bob', comment:'I love it'}, {author:'Dave', comment:'This is rubbish!'}]},
+                          {title: 'Post two', body: 'Body two'},
+                          {title: 'Post three', body: 'Body three'}]);
+
+exports.ArticleProvider= ArticleProvider;
\ No newline at end of file
diff --git a/views/blog_new.haml.html b/views/blog_new.haml.html
new file mode 100644
index 0000000..951c172
--- /dev/null
+++ b/views/blog_new.haml.html
@@ -0,0 +1,11 @@
+%h1= title
+%form{ method: 'post' }
+  %div
+    %div
+      %span Title  :
+      %input{ type: 'text', name: 'title', id: 'editArticleTitle' }
+    %div
+      %span Body :
+      %textarea{name: 'body', rows: 20, id: 'editArticleBody' }
+    %div#editArticleSubmit
+      %input{ type: 'submit', value: 'Send' }
\ No newline at end of file
diff --git a/views/blogs_index.haml.html b/views/blogs_index.haml.html
new file mode 100644
index 0000000..261a76f
--- /dev/null
+++ b/views/blogs_index.haml.html
@@ -0,0 +1,7 @@
+%h1= title
+#articles
+  :each article in articles
+    %div.article             
+      %div.created_at= article.created_at
+      %div.title= article.title
+      %div.body= article.body
\ No newline at end of file
diff --git a/views/layout.haml.html b/views/layout.haml.html
new file mode 100644
index 0000000..c806c03
--- /dev/null
+++ b/views/layout.haml.html
@@ -0,0 +1,6 @@
+%html
+  %head
+    %title= title
+    %link{ rel: 'stylesheet', href: '/style.css' }
+  %body
+    #wrapper= body
\ No newline at end of file
diff --git a/views/style.sass.css b/views/style.sass.css
new file mode 100644
index 0000000..535b9b6
--- /dev/null
+++ b/views/style.sass.css
@@ -0,0 +1,28 @@
+body
+  :font-family "Helvetica Neue", "Lucida Grande", "Arial"
+  :font-size 13px
+  :text-align center
+  =text-stroke 1px rgba(255, 255, 255, 0.1)
+  :color #555  
+h1, h2
+  :margin 0
+  :font-size 22px
+  :color #343434
+h1
+  :text-shadow 1px 2px 2px #ddd
+  :font-size 60px
+#articles
+  :text-align left
+  :margin-left auto
+  :margin-right auto
+  :width 320px
+  .article
+    :margin 20px
+    .created_at
+      :display none
+    .title
+      :font-weight bold
+      :text-decoration underline
+      :background-color #eee
+    .body
+      :background-color #ffa  
\ No newline at end of file
-- 
1.6.4.2

